version: 2.1
orbs:
  slack: circleci/slack@3.4.2

jobs:
  test:
    docker:
      - image: cimg/node:14.5
    steps:
      - checkout
      - run:
          name: Install
          command: npm install
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Test
          command: npm run test
      - slack/status: &slack_status
          fail_only: true
          only_for_branches: master
          failure_message: ":facepalm:  Failed job $CIRCLE_JOB  :homer-disappear:"
          include_job_number_field: false
  build_and_deploy_to_test:
    docker: &ecr_image
      - image: $AWS_BUILD_IMAGE_ECR_ACCOUNT_URL
        aws_auth:
          aws_access_key_id: $AWS_BUILD_IMAGE_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_BUILD_IMAGE_SECRET_ACCESS_KEY
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys: &ssh_keys
          fingerprints:
            - "e3:25:34:15:2b:c4:d3:b7:c3:94:9f:50:dd:c3:0f:de"
      - run: &base_environment_variables
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
            echo "export SSH_FILE_FOR_SECRETS=~/.ssh/id_rsa_e32534152bc4d3b7c3949f50ddc30fde" >> $BASH_ENV
      - run: &deploy_scripts
          name: cloning deploy scripts
          command: 'git clone git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - run:
          name: build and push docker images
          environment:
            ENVIRONMENT_NAME: test
          command: './deploy-scripts/bin/build'
      - run:
          name: Restart the runners test dev
          environment:
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-services-test-dev
          command: './deploy-scripts/bin/restart_all_pods'
      - run:
          name: Restart the runners in test production
          environment:
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-services-test-production
          command: './deploy-scripts/bin/restart_all_pods'
      - slack/status: *slack_status
  build_and_deploy_to_live:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: build and push docker images
          environment:
            ENVIRONMENT_NAME: live
          command: './deploy-scripts/bin/build'
      - run:
          name: Restart the runners live dev
          environment:
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-services-live-dev
          command: './deploy-scripts/bin/restart_all_pods'
      - run:
          name: Restart the runners in live production
          environment:
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-services-live-production
          command: './deploy-scripts/bin/restart_all_pods'
      - slack/status:
          only_for_branches: master
          success_message: ":rocket:  Successfully deployed to Live  :guitar:"
          failure_message: ":alert:  Failed to deploy to Live  :try_not_to_cry:"
          include_job_number_field: false

  trigger_acceptance_tests:
    working_directory: ~/circle/git/fb-runner-node
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker
      - run: *deploy_scripts
      - run:
          name: "Trigger Acceptance Tests"
          command: './deploy-scripts/bin/acceptance_tests'
      - slack/status: *slack_status

  smoke_tests:
    docker: *ecr_image
    steps:
      - setup_remote_docker
      - run: *deploy_scripts
      - run:
          name: Run smoke tests
          command: './deploy-scripts/bin/smoke_tests'
      - slack/status: *slack_status

  publish:
    docker:
      - image: circleci/node:12.4.0
    steps:
      - checkout
      - run:
          name: Install
          command: npm install
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          command: |
            set -e

            VERSION=$(node -p "require('./package.json').version")
            PUBLISHED_VERSION=$(npm view @ministryofjustice/fb-runner-node version);

            if [ "$VERSION" != "$PUBLISHED_VERSION" ]
            then
              npm publish
              curl -X POST -H 'Content-type: application/json' --data "{\"text\":\":woohoo:  Successfully published ${CIRCLE_PROJECT_REPONAME} ${VERSION}  :ship_it_parrot:\"}" "$SLACK_WEBHOOK"
            fi
      - slack/status: *slack_status

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - publish:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
      - build_and_deploy_to_test:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - trigger_acceptance_tests:
          requires:
            - build_and_deploy_to_test
          filters:
            branches:
              only:
                - master
      - slack/approval-notification:
          message: ":portalorangeparrot:  Deployment to Live pending approval  :portalblueparrot:"
          include_job_number_field: false
          requires:
            - trigger_acceptance_tests
      - confirm_live_build:
          type: approval
          requires:
            - trigger_acceptance_tests
      - build_and_deploy_to_live:
          requires:
            - confirm_live_build
      - smoke_tests:
          requires:
            - build_and_deploy_to_live
