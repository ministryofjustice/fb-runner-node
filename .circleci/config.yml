version: 2.1
orbs:
  slack: circleci/slack@3.4.2
  aws-cli: circleci/aws-cli@4.0.0 # use v4 of this orb

jobs:
  login-to-aws:
    docker: &docker_image
      - image: 'cimg/ruby:3.1.3-node'
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: $ECR_ROLE_TO_ASSUME # this will use the env var
          region: $ECR_REGION # this will use the env var
      - run: &ecr_login
          name: Login to ecr
          command: |
            aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin ${AWS_ECR_REGISTRY_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com
            aws configure export-credentials --format env
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env
  test:
    docker:
      - image: cimg/node:14.20.1
    steps:
      - checkout
      - run:
          name: Install
          command: npm install
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Test
          command: npm run test
      - slack/status: &slack_status
          fail_only: true
          only_for_branches: master
          failure_message: ":facepalm:  Failed job $CIRCLE_JOB  :homer-disappear:"
          include_job_number_field: false
  build_and_push_image_test:
    docker: &ecr_image
      - image: docker.io/ministryofjustice/fb-builder:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - setup_remote_docker: &remote_docker
          docker_layer_caching: true
      - attach_workspace:
          at: .
      - run: &workspace_envs
          command: |
            cat bash.env >> $BASH_ENV
      - run: &base_environment_variables
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
      - run: &deploy_scripts
          name: cloning deploy scripts
          command: 'git clone --branch temporary-ecr-creds git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - run:
          name: build and push docker images
          environment:
            ENVIRONMENT_NAME: test
          command: './deploy-scripts/bin/build'
      - slack/status: *slack_status
  deploy_to_test_dev:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners test dev
          environment:
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-services-test-dev
            RUNNER_TYPE: fb-runner-node
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status: *slack_status
  deploy_to_test_production:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners in test production
          environment:
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-services-test-production
            RUNNER_TYPE: fb-runner-node
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status: *slack_status
  build_and_push_image_live:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - attach_workspace:
          at: .
      - run: *workspace_envs
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: build and push docker images
          environment:
            ENVIRONMENT_NAME: live
          command: './deploy-scripts/bin/build'
      - slack/status: *slack_status
  deploy_to_live_dev:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners live dev
          environment:
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-services-live-dev
            RUNNER_TYPE: fb-runner-node
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status:
          only_for_branches: master
          success_message: ":rocket:  Successfully deployed to Live Dev :guitar:"
          failure_message: ":alert:  Failed to deploy to Live Dev  :try_not_to_cry:"
          include_job_number_field: false
  deploy_to_live_production:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners in live production
          environment:
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-services-live-production
            RUNNER_TYPE: fb-runner-node
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status:
          only_for_branches: master
          success_message: ":rocket:  Successfully deployed to Live Production  :guitar:"
          failure_message: ":alert:  Failed to deploy to Live Production  :try_not_to_cry:"
          include_job_number_field: false
  trigger_acceptance_tests:
    working_directory: ~/circle/git/fb-runner-node
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *deploy_scripts
      - run:
          name: "Trigger Acceptance Tests"
          command: './deploy-scripts/bin/acceptance_tests'
      - slack/status: *slack_status
  smoke_tests:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *deploy_scripts
      - run:
          name: Run smoke tests
          command: './deploy-scripts/bin/smoke_tests'
      - slack/status: *slack_status
  publish:
    docker:
      - image: cimg/node:14.20.1
    steps:
      - checkout
      - run:
          name: Install
          command: npm install
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          command: |
            set -e

            VERSION=$(node -p "require('./package.json').version")
            PUBLISHED_VERSION=$(npm view @ministryofjustice/fb-runner-node version);

            if [ "$VERSION" != "$PUBLISHED_VERSION" ]
            then
              npm publish
              curl -X POST -H 'Content-type: application/json' --data "{\"text\":\":woohoo:  Successfully published ${CIRCLE_PROJECT_REPONAME} ${VERSION}  :ship_it_parrot:\"}" "$SLACK_WEBHOOK"
            fi
      - slack/status: *slack_status

workflows:
  version: 2
  test_and_build:
    jobs:
      - login-to-aws:
          context: &context
            - moj-forms
      - test:
          requires:
            - login-to-aws
      - publish:
          context: *context
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
      - build_and_push_image_test:
          context: *context
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - deploy_to_test_dev:
          context: *context
          requires:
            - build_and_push_image_test
      - deploy_to_test_production:
          context: *context
          requires:
            - build_and_push_image_test
      - trigger_acceptance_tests:
          context: *context
          requires:
            - deploy_to_test_dev
            - deploy_to_test_production
      - build_and_push_image_live:
          context: *context
          requires:
            - trigger_acceptance_tests
      - slack/approval-notification:
          message: ":portalorangeparrot:  Deployment to Live pending approval  :portalblueparrot:"
          include_job_number_field: false
          context: *context
          requires:
            - trigger_acceptance_tests
      - confirm_live_build:
          type: approval
          context: *context
          requires:
            - trigger_acceptance_tests
      - deploy_to_live_dev:
          context: *context
          requires:
            - confirm_live_build
            - build_and_push_image_live
      - deploy_to_live_production:
          context: *context
          requires:
            - confirm_live_build
            - build_and_push_image_live
      - smoke_tests:
          context: *context
          requires:
            - deploy_to_live_dev
            - deploy_to_live_production
